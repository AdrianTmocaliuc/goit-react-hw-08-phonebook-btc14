{"version":3,"file":"static/js/606.a520742b.chunk.js","mappings":"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","sources":["components/utilities/Section/Section.jsx","webpack://homWork-08-phonebook-login/./src/components/utilities/Item/Item.module.scss?1823","webpack://homWork-08-phonebook-login/./src/components/ModalEditContact/ModalEditContact.module.scss?40ef","components/ModalEditContact/ModalEditContactReducer.js","components/ModalEditContact/ModalEditContact.jsx","components/utilities/Item/Item.jsx","components/PhoneBook/Contacts/Contacts.jsx","components/PhoneBook/Filter/Filter.jsx","webpack://homWork-08-phonebook-login/./src/components/PhoneBook/Form/Form.module.scss?507b","components/PhoneBook/Form/formReducer.js","components/PhoneBook/Form/Form.jsx","components/PhoneBook/PhoneBook.jsx","webpack://homWork-08-phonebook-login/./src/components/utilities/Button/Button.module.scss?da61","components/utilities/Button/Button.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Item_item__FlZ00\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"ModalEditContact_backdrop__x96ER\",\"modal\":\"ModalEditContact_modal__pC7lJ\"};","export const initialState = {\r\n  id: \"\",\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport const initialTypes = {\r\n  id: \"id\",\r\n  name: \"name\",\r\n  number: \"number\",\r\n  reset: \"reset\",\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case initialTypes.id:\r\n      return { ...state, id: payload };\r\n    case initialTypes.name:\r\n      return { ...state, name: payload };\r\n    case initialTypes.number:\r\n      return { ...state, number: payload };\r\n    case initialTypes.reset:\r\n      return initialState;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n","import { useCallback, useEffect, useReducer } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"components/utilities/Button/Button\";\r\nimport s from \"./ModalEditContact.module.scss\";\r\nimport { initialState, reducer, initialTypes } from \"./ModalEditContactReducer\";\r\nimport { fetchChangeContact } from \"redux/contacts/contactsAsyncThunk\";\r\n\r\nconst ModalEditContact = ({ onClose, contactById }) => {\r\n  console.log(\"contactById\", contactById);\r\n  const { contacts } = useSelector((state) => state.items);\r\n\r\n  const init = (props) => {\r\n    return {\r\n      ...initialState,\r\n      id: props.id,\r\n      name: props.name,\r\n      number: props.number,\r\n    };\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, dispatchState] = useReducer(reducer, contactById, init);\r\n  const { id, name, number } = state;\r\n\r\n  const onChangeInput = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    dispatchState({ type: name, payload: value });\r\n  };\r\n\r\n  const checkContact = (contact) => {\r\n    const inputName = contact.name.toLowerCase();\r\n    const names = contacts?.map((item) => item.name.toLowerCase());\r\n    if (names?.includes(inputName)) {\r\n      alert(`\"${contact.name}\" is already in contacts !`);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = { id, name, number };\r\n\r\n    const test = checkContact(contact);\r\n\r\n    if (!test) {\r\n      return;\r\n    }\r\n\r\n    dispatch(fetchChangeContact(contact));\r\n\r\n    onClose();\r\n  };\r\n\r\n  const backdropCLoseByEscape = useCallback((e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", backdropCLoseByEscape);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", backdropCLoseByEscape);\r\n    };\r\n  }, [backdropCLoseByEscape]);\r\n\r\n  const onBackdropClose = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.backdrop} onClick={onBackdropClose}>\r\n      <form className={s.modal} onSubmit={onSubmitForm}>\r\n        <label>\r\n          <h3>Name</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        <label>\r\n          <h3>Number</h3>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        <Button title=\"Change contact\" type=\"submit\" />\r\n        <Button title=\"Cancel\" onClick={() => onClose()} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalEditContact;\r\n\r\nModalEditContact.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  contactById: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }),\r\n};\r\n","import Button from \"components/utilities/Button/Button\";\r\nimport s from \"./Item.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchRemoveContact } from \"redux/contacts/contactsAsyncThunk\";\r\nimport { useState } from \"react\";\r\nimport ModalEditContact from \"components/ModalEditContact/ModalEditContact\";\r\n\r\nexport const Item = ({ contactsList }) => {\r\n  const { contacts } = useSelector((state) => state.items);\r\n  // console.log(\"state\", contacts);\r\n  const [contact, setContact] = useState({});\r\n  const [buttonId, setButtonId] = useState(\"\");\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const { name, number, id } = contactsList;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteClick = ({ target: { id } }) => {\r\n    setButtonId(id);\r\n    console.log(\"id\", id);\r\n\r\n    dispatch(fetchRemoveContact(id));\r\n  };\r\n\r\n  const changeClick = ({ target: { id } }) => {\r\n    setContact(...contacts.filter((item) => item.id === id));\r\n    //s.filter(item=>item.id===id) setButtonId(id);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModalShow(!modalShow);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {name && number && (\r\n        <li className={s.item} type={name}>\r\n          {name}: {number}\r\n          <Button\r\n            id={id}\r\n            selected={buttonId}\r\n            title=\"Delete\"\r\n            onClick={deleteClick}\r\n          />\r\n          <Button\r\n            id={id}\r\n            selected={buttonId}\r\n            title=\"Edit\"\r\n            onClick={changeClick}\r\n          />\r\n        </li>\r\n      )}\r\n      {modalShow && (\r\n        <ModalEditContact contactById={contact} onClose={toggleModal} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  contactsList: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Item } from \"components/utilities/Item/Item\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\n\r\nimport { fetchContacts } from \"redux/contacts/contactsAsyncThunk\";\r\n\r\nfunction Contacts() {\r\n  const items = useSelector((state) => state.items.contacts) || [];\r\n  const contactsLoader = useSelector((state) => state.items.contactsLoader);\r\n  const filter = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const filterContacts = items.filter((elem) => {\r\n    return elem.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {contactsLoader ? (\r\n        <TailSpin height=\"25\" width=\"25\" color=\"red\" ariaLabel=\"loading\" />\r\n      ) : (\r\n        <ul>\r\n          {!!filterContacts.length &&\r\n            filterContacts.map((item) => {\r\n              return <Item key={item.id} contactsList={item} />;\r\n            })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      phone: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Contacts;\r\n","import PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterContacts } from \"redux/filter/filter-slice\";\r\n// import { actionFilterContacts } from \"redux/filter/filter-actions\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  function inputChange({ target: { value } }) {\r\n    dispatch(filterContacts(value));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label style={{ display: \"grid\" }}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          style={{ width: \"200px\" }}\r\n          onChange={inputChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__Q0fax\"};","export const initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport const initialTypes = {\r\n  name: \"name\",\r\n  number: \"number\",\r\n  reset: \"reset\",\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case initialTypes.name:\r\n      return { ...state, name: payload };\r\n    case initialTypes.number:\r\n      return { ...state, number: payload };\r\n    case initialTypes.reset:\r\n      return initialState;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n","import { useReducer } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\n\r\nimport Button from \"components/utilities/Button/Button\";\r\nimport s from \"./Form.module.scss\";\r\nimport { fetchWithNewContact } from \"redux/contacts/contactsAsyncThunk\";\r\nimport { initialState, reducer } from \"./formReducer\";\r\n\r\nfunction GeneralForm() {\r\n  const items = useSelector((state) => state.items.contacts);\r\n  const addLoader = useSelector((state) => state.items.addLoader);\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, dispatchState] = useReducer(reducer, initialState);\r\n  const { name, number } = state;\r\n\r\n  const onChangeInput = ({ target }) => {\r\n    const { name, value } = target;\r\n    dispatchState({ type: name, payload: value });\r\n  };\r\n\r\n  const addContacts = (contact) => {\r\n    const inputName = contact.name.toLowerCase();\r\n    const names = items?.map((item) => item.name.toLowerCase());\r\n\r\n    if (names?.includes(inputName)) {\r\n      alert(`\"${contact.name}\" is already in contacts !`);\r\n      return;\r\n    }\r\n    dispatch(fetchWithNewContact(contact));\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = { name, number };\r\n\r\n    addContacts(contact);\r\n\r\n    dispatchState({ type: \"reset\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={onSubmitForm}>\r\n        <label>\r\n          <h3>Name</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        <label>\r\n          <h3>Number</h3>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        {addLoader ? (\r\n          <TailSpin height=\"27\" width=\"27\" color=\"red\" ariaLabel=\"loading\" />\r\n        ) : (\r\n          <Button title=\"Add contact\" type=\"submit\" />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GeneralForm;\r\n","import { Section } from \"components/utilities/Section/Section\";\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Form from \"./Form/Form\";\r\n\r\nfunction PhoneBook() {\r\n  return (\r\n    <div>\r\n      <Section title=\"Phonebook\">\r\n        <Form />\r\n      </Section>\r\n      <Section>\r\n        <Filter />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Contacts />\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhoneBook;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__9lDDD\"};","import { Component } from \"react\";\r\nimport s from \"./Button.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { TailSpin } from \"react-loader-spinner\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { title, id, onClick, selected, type = \"button\" } = this.props;\r\n    const checkedButton =\r\n      this?.props?.loading && selected === id && title === \"Delete\";\r\n    return (\r\n      <>\r\n        <button\r\n          disabled={checkedButton ? true : false}\r\n          className={s.button}\r\n          id={id}\r\n          onClick={onClick}\r\n          type={type}\r\n        >\r\n          {checkedButton ? (\r\n            <TailSpin height=\"15\" width=\"15\" color=\"red\" ariaLabel=\"loading\" />\r\n          ) : (\r\n            title\r\n          )}\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  onClick: PropTypes.func,\r\n  id: PropTypes.string,\r\n  selected: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { loading: state.items.removeLoader };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Button);\r\n"],"names":["Section","title","children","initialState","id","name","number","initialTypes","reducer","state","action","type","payload","onClose","contactById","console","log","useSelector","items","contacts","dispatch","useDispatch","useReducer","props","dispatchState","onChangeInput","target","value","backdropCLoseByEscape","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","className","s","onClick","currentTarget","onSubmit","preventDefault","contact","test","inputName","toLowerCase","names","map","item","includes","alert","checkContact","fetchChangeContact","pattern","required","onChange","Button","Item","contactsList","useState","setContact","buttonId","setButtonId","modalShow","setModalShow","selected","fetchRemoveContact","filter","contactsLoader","fetchContacts","filterContacts","elem","height","width","color","ariaLabel","length","style","display","addLoader","fetchWithNewContact","addContacts","Form","this","checkedButton","loading","disabled","Component","connect","removeLoader"],"sourceRoot":""}