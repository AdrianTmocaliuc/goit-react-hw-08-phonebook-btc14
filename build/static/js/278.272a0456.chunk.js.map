{"version":3,"file":"static/js/278.272a0456.chunk.js","mappings":"gVACA,EAAuB,oB,8BCOVA,EAAe,CAC1BC,MAAO,GACPC,SAAU,IAGCC,EAAe,CAC1BF,MAAO,QACPC,SAAU,WACVE,MAAO,SAGF,SAASC,EAAQC,EAAOC,GAC7B,IAAQC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAKL,EAAaF,MAChB,OAAO,kBAAKK,GAAZ,IAAmBL,MAAOQ,IAC5B,KAAKN,EAAaD,SAChB,OAAO,kBAAKI,GAAZ,IAAmBJ,SAAUO,IAC/B,KAAKN,EAAaC,MAChB,OAAOJ,GAOb,IAsDA,EAtDc,WACZ,IAAMU,GAAWC,EAAAA,EAAAA,MACjB,GAA+BC,EAAAA,EAAAA,YAAWP,EAASL,GAAnD,eAAOM,EAAP,KAAcO,EAAd,KACQZ,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SACf,GAAuBY,EAAAA,EAAAA,KAAY,SAACR,GAAD,OAAWA,EAAMS,iBAA5CC,EAAR,EAAQA,WAEFC,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACfC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdP,EAAc,CAAEL,KAAMW,EAAMV,QAASW,KAWvC,OACE,+BACE,kBAAMC,UAAWC,EAAQC,SAVR,SAACC,GACpBA,EAAEC,iBAEFf,GAASgB,EAAAA,EAAAA,IAAUpB,IAEnBO,EAAc,CAAEL,KAAM,WAKpB,WACE,8BACE,mCACA,kBACEA,KAAK,MACLW,KAAK,QACLC,MAAOnB,EACP0B,MAAM,8FACNC,UAAQ,EACRC,SAAUZ,QAGd,8BACE,sCACA,kBACET,KAAK,MACLW,KAAK,WACLC,MAAOlB,EACPyB,MAAM,8FACNC,UAAQ,EACRC,SAAUZ,OAGbD,GACC,SAAC,KAAD,CAAUc,OAAO,KAAKC,MAAM,KAAKC,MAAM,MAAMC,UAAU,aAEvD,SAACC,EAAA,EAAD,CAAQP,MAAM,QAAQnB,KAAK,kB,2GChFrC,EAAyB,uB,8BCOnB0B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAsBH,OAtBGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WAAU,IAAD,EACP,EAA0DC,KAAKC,MAAvDT,EAAR,EAAQA,MAAOU,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,SAA5B,IAAsC/B,KAAAA,OAAtC,MAA6C,SAA7C,EACMgC,GACJ,OAAAL,WAAA,IAAAA,MAAA,UAAAA,KAAMC,aAAN,eAAaK,UAAWF,IAAaF,GAAgB,WAAVV,EAC7C,OACE,+BACE,mBACEe,WAAUF,EACVnB,UAAWC,EACXe,GAAIA,EACJC,QAASA,EACT9B,KAAMA,EALR,SAOGgC,GACC,SAAC,KAAD,CAAUV,OAAO,KAAKC,MAAM,KAAKC,MAAM,MAAMC,UAAU,YAEvDN,UAKT,EAtBGO,CAAeS,EAAAA,WAoCrB,GAAeC,EAAAA,EAAAA,KAJS,SAACtC,GACvB,MAAO,CAAEmC,QAASnC,EAAMuC,MAAMC,gBAGhC,CAAwCZ","sources":["webpack://homWork-08-phonebook-login/./src/Pages/Login/Login.module.scss?a8e4","Pages/Login/Login.jsx","webpack://homWork-08-phonebook-login/./src/components/utilities/Button/Button.module.scss?da61","components/utilities/Button/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__h9FtG\"};","import { TailSpin } from \"react-loader-spinner\";\r\nimport Button from \"components/utilities/Button/Button\";\r\nimport { useReducer } from \"react\";\r\n\r\nimport s from \"./Login.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LoginUser } from \"redux/authorization/authorizationAsyncThunk\";\r\n\r\nexport const initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const initialTypes = {\r\n  email: \"email\",\r\n  password: \"password\",\r\n  reset: \"reset\",\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case initialTypes.email:\r\n      return { ...state, email: payload };\r\n    case initialTypes.password:\r\n      return { ...state, password: payload };\r\n    case initialTypes.reset:\r\n      return initialState;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [state, dispatchState] = useReducer(reducer, initialState);\r\n  const { email, password } = state;\r\n  const { authLoader } = useSelector((state) => state.authorization);\r\n\r\n  const onChangeInput = ({ target }) => {\r\n    const { name, value } = target;\r\n    dispatchState({ type: name, payload: value });\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(LoginUser(state));\r\n\r\n    dispatchState({ type: \"reset\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={onSubmitForm}>\r\n        <label>\r\n          <h3>Email</h3>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"email\"\r\n            value={email}\r\n            title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        <label>\r\n          <h3>Password</h3>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"password\"\r\n            value={password}\r\n            title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        {authLoader ? (\r\n          <TailSpin height=\"27\" width=\"27\" color=\"red\" ariaLabel=\"loading\" />\r\n        ) : (\r\n          <Button title=\"Login\" type=\"submit\" />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__9lDDD\"};","import { Component } from \"react\";\r\nimport s from \"./Button.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { TailSpin } from \"react-loader-spinner\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { title, id, onClick, selected, type = \"button\" } = this.props;\r\n    const checkedButton =\r\n      this?.props?.loading && selected === id && title === \"Delete\";\r\n    return (\r\n      <>\r\n        <button\r\n          disabled={checkedButton ? true : false}\r\n          className={s.button}\r\n          id={id}\r\n          onClick={onClick}\r\n          type={type}\r\n        >\r\n          {checkedButton ? (\r\n            <TailSpin height=\"15\" width=\"15\" color=\"red\" ariaLabel=\"loading\" />\r\n          ) : (\r\n            title\r\n          )}\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  onClick: PropTypes.func,\r\n  id: PropTypes.string,\r\n  selected: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { loading: state.items.removeLoader };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Button);\r\n"],"names":["initialState","email","password","initialTypes","reset","reducer","state","action","type","payload","dispatch","useDispatch","useReducer","dispatchState","useSelector","authorization","authLoader","onChangeInput","target","name","value","className","s","onSubmit","e","preventDefault","LoginUser","title","required","onChange","height","width","color","ariaLabel","Button","this","props","id","onClick","selected","checkedButton","loading","disabled","Component","connect","items","removeLoader"],"sourceRoot":""}